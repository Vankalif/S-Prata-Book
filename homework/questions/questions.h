#pragma once

#include <iostream>

#include "../../types/my_types.h"

///////////////////////////////////////////////////
// ==================> q-8-2 <================== //
///////////////////////////////////////////////////

void song(char* name, int times = 1);


///////////////////////////////////////////////////
// ==================> q-8-3 <================== //
///////////////////////////////////////////////////

void iquote(int target);
void iquote(double target);
void iquote(std::string target);


///////////////////////////////////////////////////
// ==================> q-8-4 <================== //
///////////////////////////////////////////////////

void boxPrinter(box& box);
box& boxVolume(box& box);


///////////////////////////////////////////////////
// ==================> q-8-6 <================== //
///////////////////////////////////////////////////

double mass(double density, double volume);

// использование mass(density) возможно при помощи
// параметра по умолчанию, при использовании перегрузки,
// когда переменна€ volume объ€влена внутри тела функции.
double mass(double density, double volume = 1.0);

void repeat(int times, const char*);

// использование repeat("Tralala") невозможно при помощи
// параметра по умолчанию, возможно при использовании перегрузки,
// когда переменна€ times объ€влена внутри тела функции.
void repeat(const char*);

// ¬озможно два варианта, первый с использованием перегрузки функций,
// второй использовать шаблон функции.
int avarage(int a, int b);
double avarage(double a, double b);

// невозможно, т.к. у функций будет одинакова€ сигнатура
char* mangle(char*);


///////////////////////////////////////////////////
// ==================> q-8-7 <================== //
///////////////////////////////////////////////////

template<typename T>
T max(T a, T b)
{
	return a < b ? a : b;
}


///////////////////////////////////////////////////
// ==================> q-8-8 <================== //
///////////////////////////////////////////////////

// €вна€ специализаци€ шаблона max
template <> box& max<box&>(box& a, box& b)
{
	return a.volume < b.volume ? a : b;
}


///////////////////////////////////////////////////
// ==================> q-8-9 <================== //
///////////////////////////////////////////////////

// int g(int x)
// ...
// float m = 5.5;
// float & rm = m;
// decltype(m) v1 = m; -- v1 -> float
// decltype(rm) v2 = m; -- v2 -> float &
// decltype((m)) v3 = m; -- v3 -> float &
// decltype(g(100)) v4; -- v4 -> int
// decltype(2.0 * m) v5; -- v5 -> double